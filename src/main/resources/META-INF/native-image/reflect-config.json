[
  {
    "name": "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor$Dispatcher",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.sql.Statement;"
  },
  {
    "name": "[Ljava.util.List;"
  },
  {
    "name": "[Ljava.util.Map$Entry;"
  },
  {
    "name": "[Ljava.util.function.Function;"
  },
  {
    "name": "[Ljava.util.function.Supplier;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.AutoFlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.EvictEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEntityEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LockEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.MergeEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PersistEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostDeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostInsertEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreDeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreInsertEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.RefreshEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ReplicateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.DotIdentifierConsumer;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.SqmCreationProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.spi.ParameterDeclarationContext;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.sql.FromClauseIndex;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.Clause;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.spi.SqlAstProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.Statement;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.select.QueryPart;"
  },
  {
    "name": "[Lorg.hibernate.sql.results.jdbc.spi.JdbcValuesSourceProcessingState;"
  },
  {
    "name": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
  },
  {
    "name": "[Lorg.springframework.core.io.Resource;",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[Z"
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "char",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Character"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.elasticsearch.ElasticsearchClient"
  },
  {
    "name": "co.elastic.clients.transport.ElasticsearchTransport"
  },
  {
    "name": "com.couchbase.client.java.Bucket"
  },
  {
    "name": "com.couchbase.client.java.Cluster"
  },
  {
    "name": "com.datastax.oss.driver.api.core.CqlSession"
  },
  {
    "name": "com.dropbox.core.DbxException"
  },
  {
    "name": "com.dropbox.core.DbxRequestConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.dropbox.core.DbxRequestConfig$Builder"
  },
  {
    "name": "com.dropbox.core.DbxWebAuth$BadRequestException"
  },
  {
    "name": "com.dropbox.core.DbxWebAuth$BadStateException"
  },
  {
    "name": "com.dropbox.core.DbxWebAuth$CsrfException"
  },
  {
    "name": "com.dropbox.core.DbxWebAuth$NotApprovedException"
  },
  {
    "name": "com.dropbox.core.DbxWebAuth$ProviderException"
  },
  {
    "name": "com.dropbox.core.http.HttpRequestor"
  },
  {
    "name": "com.dropbox.core.oauth.DbxCredential",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.dropbox.core.v2.DbxClientV2"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Value"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSetter$Value"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonTypeInfo$As"
  },
  {
    "name": "com.fasterxml.jackson.annotation.PropertyAccessor"
  },
  {
    "name": "com.fasterxml.jackson.core.Base64Variant"
  },
  {
    "name": "com.fasterxml.jackson.core.FormatSchema"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonEncoding"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonFactory"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonFactory$Feature"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator$Feature"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonParser"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonParser$Feature"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonProcessingException"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonToken"
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.PrettyPrinter"
  },
  {
    "name": "com.fasterxml.jackson.core.StreamReadFeature"
  },
  {
    "name": "com.fasterxml.jackson.core.StreamWriteFeature"
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.core.TreeNode"
  },
  {
    "name": "com.fasterxml.jackson.core.Version"
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.core.exc.StreamReadException"
  },
  {
    "name": "com.fasterxml.jackson.core.exc.StreamWriteException"
  },
  {
    "name": "com.fasterxml.jackson.core.io.CharacterEscapes"
  },
  {
    "name": "com.fasterxml.jackson.core.type.ResolvedType"
  },
  {
    "name": "com.fasterxml.jackson.core.type.TypeReference"
  },
  {
    "name": "com.fasterxml.jackson.databind.AnnotationIntrospector"
  },
  {
    "name": "com.fasterxml.jackson.databind.DatabindException"
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationConfig"
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationContext"
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.InjectableValues"
  },
  {
    "name": "com.fasterxml.jackson.databind.JavaType"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonDeserializer"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonMappingException"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonNode"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonSerializer"
  },
  {
    "name": "com.fasterxml.jackson.databind.KeyDeserializer"
  },
  {
    "name": "com.fasterxml.jackson.databind.MapperFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.MappingIterator"
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.Module$SetupContext"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectReader"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectWriter"
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategy"
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationConfig"
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializerProvider"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.ConstructorDetector"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.ContextAttributes"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.DatatypeFeature"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
  },
  {
    "name": "com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.ValueInstantiator"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.ClassIntrospector"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
  },
  {
    "name": "com.fasterxml.jackson.databind.introspect.VisibilityChecker"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsonschema.JsonSchema"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.NamedType"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
  },
  {
    "name": "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleDeserializers"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleSerializers"
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
  },
  {
    "name": "com.fasterxml.jackson.databind.node.ArrayNode"
  },
  {
    "name": "com.fasterxml.jackson.databind.node.JsonNodeFactory"
  },
  {
    "name": "com.fasterxml.jackson.databind.node.ObjectNode"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.FilterProvider"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.SerializerFactory"
  },
  {
    "name": "com.fasterxml.jackson.databind.type.LogicalType"
  },
  {
    "name": "com.fasterxml.jackson.databind.type.TypeFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.Caffeine"
  },
  {
    "name": "com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect"
  },
  {
    "name": "com.google.common.base.Optional"
  },
  {
    "name": "com.google.gson.Gson"
  },
  {
    "name": "com.hazelcast.core.HazelcastInstance"
  },
  {
    "name": "com.jayway.jsonpath.DocumentContext"
  },
  {
    "name": "com.mongodb.client.MongoClient"
  },
  {
    "name": "com.mongodb.reactivestreams.client.MongoClient"
  },
  {
    "name": "com.mysql.cj.conf.url.SingleConnectionUrl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.mysql.cj.conf.ConnectionUrlParser",
          "java.util.Properties"
        ]
      }
    ]
  },
  {
    "name": "com.mysql.cj.exceptions.CJException",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.mysql.cj.jdbc.AbandonedConnectionCleanupThread"
  },
  {
    "name": "com.mysql.cj.jdbc.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.mysql.cj.jdbc.StatementImpl"
  },
  {
    "name": "com.mysql.cj.jdbc.exceptions.SQLError"
  },
  {
    "name": "com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping"
  },
  {
    "name": "com.mysql.cj.log.StandardLogger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.mysql.cj.protocol.StandardSocketFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.querydsl.core.Query"
  },
  {
    "name": "com.querydsl.core.types.Predicate"
  },
  {
    "name": "com.rabbitmq.client.Channel"
  },
  {
    "name": "com.rometools.rome.feed.WireFeed"
  },
  {
    "name": "com.samskivert.mustache.Mustache"
  },
  {
    "name": "com.samskivert.mustache.Template"
  },
  {
    "name": "com.sendgrid.SendGrid"
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariPoolMXBean"
  },
  {
    "name": "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
  },
  {
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection",
    "methods": [
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.HikariProxyStatement"
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolBase",
    "fields": [
      {
        "name": "catalog"
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolEntry",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.ProxyStatement"
  },
  {
    "name": "freemarker.template.Configuration"
  },
  {
    "name": "graphql.GraphQL"
  },
  {
    "name": "groovy.lang.MetaClass"
  },
  {
    "name": "groovy.text.TemplateEngine"
  },
  {
    "name": "groovy.text.markup.MarkupTemplateEngine"
  },
  {
    "name": "io.micrometer.context.ContextSnapshot"
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry"
  },
  {
    "name": "io.netty.buffer.PooledByteBufAllocator"
  },
  {
    "name": "io.netty.util.NettyRuntime"
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactory"
  },
  {
    "name": "io.reactivex.rxjava3.core.Flowable"
  },
  {
    "name": "io.rsocket.RSocket"
  },
  {
    "name": "io.rsocket.core.RSocketServer"
  },
  {
    "name": "io.smallrye.mutiny.Multi"
  },
  {
    "name": "io.undertow.Undertow"
  },
  {
    "name": "io.undertow.websockets.jsr.Bootstrap"
  },
  {
    "name": "io.vavr.control.Option"
  },
  {
    "name": "io.vavr.control.Try"
  },
  {
    "name": "jakarta.activation.MimeType"
  },
  {
    "name": "jakarta.annotation.ManagedBean"
  },
  {
    "name": "jakarta.annotation.PostConstruct"
  },
  {
    "name": "jakarta.annotation.PreDestroy"
  },
  {
    "name": "jakarta.annotation.Resource"
  },
  {
    "name": "jakarta.ejb.EJB"
  },
  {
    "name": "jakarta.ejb.TransactionAttribute"
  },
  {
    "name": "jakarta.faces.context.FacesContext"
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Named"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.jms.ConnectionFactory"
  },
  {
    "name": "jakarta.jms.Message"
  },
  {
    "name": "jakarta.json.bind.Jsonb"
  },
  {
    "name": "jakarta.mail.internet.MimeMessage"
  },
  {
    "name": "jakarta.persistence.Cache"
  },
  {
    "name": "jakarta.persistence.CacheRetrieveMode"
  },
  {
    "name": "jakarta.persistence.CacheStoreMode"
  },
  {
    "name": "jakarta.persistence.CollectionTable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Column",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "updatable",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.ElementCollection",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Embeddable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Entity",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityGraph"
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy134"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy134"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getLockMode",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy134"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy134"
        ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy128"
        ]
      },
      {
        "name": "addNamedEntityGraph",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.EntityGraph"
        ]
      },
      {
        "name": "addNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.Query"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": []
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType",
          "java.util.Map"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy128"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitUtil",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy128"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy128"
        ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityTransaction"
  },
  {
    "name": "jakarta.persistence.Enumerated",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.FlushModeType"
  },
  {
    "name": "jakarta.persistence.ForeignKey",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.GeneratedValue",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Id",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Index",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.JoinColumn",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.JoinTable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.LockModeType"
  },
  {
    "name": "jakarta.persistence.ManyToMany",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "targetEntity",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.ManyToOne",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "targetEntity",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.MappedSuperclass",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.OneToMany",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "targetEntity",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.OneToOne",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "targetEntity",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Persistence",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUtil",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.PersistenceContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PersistenceException"
  },
  {
    "name": "jakarta.persistence.PersistenceProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PersistenceUnitUtil"
  },
  {
    "name": "jakarta.persistence.Query",
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.SharedCacheMode"
  },
  {
    "name": "jakarta.persistence.StoredProcedureQuery"
  },
  {
    "name": "jakarta.persistence.SynchronizationType"
  },
  {
    "name": "jakarta.persistence.Table",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.TypedQuery"
  },
  {
    "name": "jakarta.persistence.UniqueConstraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.ValidationMode"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaBuilder"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaDelete"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaQuery"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaUpdate"
  },
  {
    "name": "jakarta.persistence.metamodel.Metamodel"
  },
  {
    "name": "jakarta.persistence.spi.PersistenceProvider"
  },
  {
    "name": "jakarta.persistence.spi.PersistenceUnitInfo"
  },
  {
    "name": "jakarta.servlet.DispatcherType"
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda$1576/0x0000028fb7b14a38"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda$1576/0x0000028fb7b14a38"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda$1576/0x0000028fb7b14a38"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector$$Lambda$1576/0x0000028fb7b14a38"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.FilterChain"
  },
  {
    "name": "jakarta.servlet.FilterConfig"
  },
  {
    "name": "jakarta.servlet.FilterRegistration$Dynamic"
  },
  {
    "name": "jakarta.servlet.GenericFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.GenericServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getServletConfig",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "getServletInfo",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.servlet.Registration$Dynamic"
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "jakarta.servlet.ServletContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletException"
  },
  {
    "name": "jakarta.servlet.ServletRegistration"
  },
  {
    "name": "jakarta.servlet.ServletRegistration$Dynamic"
  },
  {
    "name": "jakarta.servlet.ServletRequest"
  },
  {
    "name": "jakarta.servlet.ServletResponse"
  },
  {
    "name": "jakarta.servlet.http.HttpServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.ServletConfig"
        ]
      },
      {
        "name": "service",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.http.HttpServletRequest"
  },
  {
    "name": "jakarta.servlet.http.HttpServletResponse"
  },
  {
    "name": "jakarta.servlet.http.HttpSession"
  },
  {
    "name": "jakarta.servlet.jsp.jstl.core.Config"
  },
  {
    "name": "jakarta.transaction.Transaction"
  },
  {
    "name": "jakarta.transaction.TransactionManager"
  },
  {
    "name": "jakarta.transaction.Transactional"
  },
  {
    "name": "jakarta.validation.ClockProvider"
  },
  {
    "name": "jakarta.validation.Configuration"
  },
  {
    "name": "jakarta.validation.Constraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ConstraintValidatorFactory"
  },
  {
    "name": "jakarta.validation.ConstraintViolation"
  },
  {
    "name": "jakarta.validation.MessageInterpolator"
  },
  {
    "name": "jakarta.validation.ParameterNameProvider"
  },
  {
    "name": "jakarta.validation.TraversableResolver"
  },
  {
    "name": "jakarta.validation.Valid",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ValidationProviderResolver"
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "jakarta.validation.ValidatorContext"
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "jakarta.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "jakarta.validation.executable.ExecutableValidator"
  },
  {
    "name": "jakarta.validation.metadata.BeanDescriptor"
  },
  {
    "name": "jakarta.validation.metadata.ConstraintDescriptor"
  },
  {
    "name": "jakarta.websocket.server.ServerContainer"
  },
  {
    "name": "jakarta.xml.bind.Binder"
  },
  {
    "name": "jakarta.xml.ws.WebServiceRef"
  },
  {
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.io.DataInput"
  },
  {
    "name": "java.io.DataOutput"
  },
  {
    "name": "java.io.File"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.IOException"
  },
  {
    "name": "java.io.InputStream"
  },
  {
    "name": "java.io.ObjectInputStream"
  },
  {
    "name": "java.io.ObjectStreamException"
  },
  {
    "name": "java.io.OutputStream"
  },
  {
    "name": "java.io.PrintWriter"
  },
  {
    "name": "java.io.Reader"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.io.UnsupportedEncodingException"
  },
  {
    "name": "java.io.Writer"
  },
  {
    "name": "java.lang.AbstractStringBuilder"
  },
  {
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Boolean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "toboolean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.CharSequence",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Character",
    "methods": [
      {
        "name": "tochar",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotatedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedSuperclass",
        "parameterTypes": []
      },
      {
        "name": "getDeclaredMethod",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getMethod",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getNestHost",
        "parameterTypes": []
      },
      {
        "name": "getNestMembers",
        "parameterTypes": []
      },
      {
        "name": "getPermittedSubclasses",
        "parameterTypes": []
      },
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isNestmateOf",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      },
      {
        "name": "isSealed",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      },
      {
        "name": "getUnnamedModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ClassNotFoundException"
  },
  {
    "name": "java.lang.CloneNotSupportedException"
  },
  {
    "name": "java.lang.Cloneable",
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Comparable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Double"
  },
  {
    "name": "java.lang.Enum"
  },
  {
    "name": "java.lang.Exception"
  },
  {
    "name": "java.lang.IllegalArgumentException"
  },
  {
    "name": "java.lang.IllegalStateException"
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.InterruptedException"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.LinkageError"
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addExports",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Module"
        ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "isNamed",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Record"
  },
  {
    "name": "java.lang.ReflectiveOperationException"
  },
  {
    "name": "java.lang.Runnable"
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "feature",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.RuntimeException"
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "charAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "chars",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "codePoints",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "resolveConstantDesc",
        "parameterTypes": [
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "subSequence",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.StringBuffer"
  },
  {
    "name": "java.lang.StringBuilder"
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      },
      {
        "name": "nanoTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.System$2",
    "methods": [
      {
        "name": "getConstantPool",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Thread",
    "fields": [
      {
        "name": "threadLocalRandomProbe"
      }
    ]
  },
  {
    "name": "java.lang.Thread$Builder"
  },
  {
    "name": "java.lang.ThreadGroup"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.Void"
  },
  {
    "name": "java.lang.WrongThreadException"
  },
  {
    "name": "java.lang.annotation.Annotation"
  },
  {
    "name": "java.lang.annotation.Documented",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Repeatable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.annotation.Target",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.foreign.MemorySegment"
  },
  {
    "name": "java.lang.invoke.MethodHandle"
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "methods": [
      {
        "name": "lookup",
        "parameterTypes": []
      },
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "fields": [
      {
        "name": "IMPL_LOOKUP"
      }
    ],
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "lookupClass",
        "parameterTypes": []
      },
      {
        "name": "lookupModes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodType"
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AccessibleObject",
    "fields": [
      {
        "name": "override"
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedArrayType",
    "methods": [
      {
        "name": "getAnnotatedGenericComponentType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AnnotatedParameterizedType",
    "methods": [
      {
        "name": "getAnnotatedActualTypeArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedType",
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Constructor"
  },
  {
    "name": "java.lang.reflect.Executable",
    "methods": [
      {
        "name": "getAnnotatedExceptionTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedReceiverType",
        "parameterTypes": []
      },
      {
        "name": "getParameterCount",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Field"
  },
  {
    "name": "java.lang.reflect.GenericArrayType",
    "methods": [
      {
        "name": "getGenericComponentType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.InvocationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.reflect.Method",
    "methods": [
      {
        "name": "getAnnotatedReturnType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Parameter",
    "methods": [
      {
        "name": "getModifiers",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isNamePresent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Proxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.reflect.RecordComponent",
    "methods": [
      {
        "name": "getAccessor",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "methods": [
      {
        "name": "getBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "methods": [
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.net.InetAddress"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URL"
  },
  {
    "name": "java.net.URLClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.UnixDomainSocketAddress",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.http.HttpClient"
  },
  {
    "name": "java.nio.channels.ServerSocketChannel",
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.SocketChannel",
    "methods": [
      {
        "name": "open",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "name": "java.nio.charset.CharacterCodingException"
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.nio.charset.CharsetDecoder"
  },
  {
    "name": "java.nio.file.Path"
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": [
          "java.security.PrivilegedExceptionAction"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.sql.CallableStatement"
  },
  {
    "name": "java.sql.Connection"
  },
  {
    "name": "java.sql.ConnectionBuilder"
  },
  {
    "name": "java.sql.Driver"
  },
  {
    "name": "java.sql.DriverManager"
  },
  {
    "name": "java.sql.PreparedStatement"
  },
  {
    "name": "java.sql.ResultSet"
  },
  {
    "name": "java.sql.SQLException",
    "fields": [
      {
        "name": "next"
      }
    ]
  },
  {
    "name": "java.sql.SQLFeatureNotSupportedException"
  },
  {
    "name": "java.sql.SQLWarning"
  },
  {
    "name": "java.sql.ShardingKeyBuilder"
  },
  {
    "name": "java.sql.Statement"
  },
  {
    "name": "java.sql.Types",
    "allPublicFields": true
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.text.DateFormat"
  },
  {
    "name": "java.text.MessageFormat"
  },
  {
    "name": "java.time.Clock"
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.LocalDate"
  },
  {
    "name": "java.time.LocalDateTime"
  },
  {
    "name": "java.util.ArrayList"
  },
  {
    "name": "java.util.Collection"
  },
  {
    "name": "java.util.Comparator"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.EnumSet"
  },
  {
    "name": "java.util.Enumeration"
  },
  {
    "name": "java.util.EventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.HashMap"
  },
  {
    "name": "java.util.HashSet"
  },
  {
    "name": "java.util.Iterator"
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Locale",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.Map$Entry"
  },
  {
    "name": "java.util.Optional"
  },
  {
    "name": "java.util.Properties"
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.ServiceLoader"
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "java.util.Spliterator"
  },
  {
    "name": "java.util.Spliterator$OfInt"
  },
  {
    "name": "java.util.TimeZone"
  },
  {
    "name": "java.util.concurrent.BlockingQueue"
  },
  {
    "name": "java.util.concurrent.Callable",
    "methods": [
      {
        "name": "call",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.CompletableFuture"
  },
  {
    "name": "java.util.concurrent.ConcurrentHashMap"
  },
  {
    "name": "java.util.concurrent.CountDownLatch"
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.concurrent.ExecutorService"
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [
      {
        "name": "aux"
      },
      {
        "name": "status"
      }
    ]
  },
  {
    "name": "java.util.concurrent.Future"
  },
  {
    "name": "java.util.concurrent.RejectedExecutionHandler"
  },
  {
    "name": "java.util.concurrent.ScheduledExecutorService"
  },
  {
    "name": "java.util.concurrent.ScheduledFuture"
  },
  {
    "name": "java.util.concurrent.ScheduledThreadPoolExecutor"
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.concurrent.ThreadPoolExecutor"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "java.util.function.BiConsumer"
  },
  {
    "name": "java.util.function.BiFunction"
  },
  {
    "name": "java.util.function.Consumer"
  },
  {
    "name": "java.util.function.Function"
  },
  {
    "name": "java.util.function.ObjIntConsumer"
  },
  {
    "name": "java.util.function.Predicate"
  },
  {
    "name": "java.util.function.Supplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.logging.LogManager"
  },
  {
    "name": "java.util.logging.Logger"
  },
  {
    "name": "java.util.logging.SimpleFormatter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.stream.Collector"
  },
  {
    "name": "java.util.stream.IntStream"
  },
  {
    "name": "java.util.stream.Stream"
  },
  {
    "name": "javafx.beans.value.ObservableValue"
  },
  {
    "name": "javax.annotation.ManagedBean"
  },
  {
    "name": "javax.annotation.Nonnull"
  },
  {
    "name": "javax.annotation.PostConstruct"
  },
  {
    "name": "javax.annotation.PreDestroy"
  },
  {
    "name": "javax.annotation.Resource"
  },
  {
    "name": "javax.cache.Caching"
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Named"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.naming.InitialContext"
  },
  {
    "name": "javax.naming.NamingException"
  },
  {
    "name": "javax.naming.Reference"
  },
  {
    "name": "javax.naming.Referenceable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getReference",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.naming.ldap.LdapContext"
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createShardingKeyBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createConnectionBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.sql.XADataSource"
  },
  {
    "name": "jdk.crac.management.CRaCMXBean"
  },
  {
    "name": "jdk.internal.ValueBased",
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.access.SharedSecrets",
    "methods": [
      {
        "name": "getJavaLangAccess",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.loader.AbstractClassLoaderValue$Sub"
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.reflect.ConstantPool",
    "methods": [
      {
        "name": "getMethodAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.reflect.DelegatingMethodAccessorImpl"
  },
  {
    "name": "jdk.internal.reflect.NativeMethodAccessorImpl"
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.coroutines.Continuation"
  },
  {
    "name": "kotlinx.coroutines.reactor.MonoKt"
  },
  {
    "name": "kotlinx.serialization.cbor.Cbor"
  },
  {
    "name": "kotlinx.serialization.json.Json"
  },
  {
    "name": "kotlinx.serialization.protobuf.ProtoBuf"
  },
  {
    "name": "liquibase.change.DatabaseChange"
  },
  {
    "name": "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.AllArguments",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "includeSelf",
        "parameterTypes": []
      },
      {
        "name": "nullIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Argument",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.BindingPriority",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Default",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultCall",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethod",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldGetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldSetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "declaringType",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Origin",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "cache",
        "parameterTypes": []
      },
      {
        "name": "privileged",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.StubValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Super",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperCall",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperMethod",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperMethodHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.This",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.utility.Invoker",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.utility.Invoker$Dispatcher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.sf.jsqlparser.parser.JSqlParser"
  },
  {
    "name": "nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect"
  },
  {
    "name": "oracle.jdbc.OracleConnection"
  },
  {
    "name": "oracle.ucp.jdbc.PoolDataSource"
  },
  {
    "name": "oracle.ucp.jdbc.PoolDataSourceImpl"
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.catalina.Context"
  },
  {
    "name": "org.apache.catalina.Engine"
  },
  {
    "name": "org.apache.catalina.Host"
  },
  {
    "name": "org.apache.catalina.LifecycleEvent"
  },
  {
    "name": "org.apache.catalina.LifecycleListener"
  },
  {
    "name": "org.apache.catalina.Manager"
  },
  {
    "name": "org.apache.catalina.Valve"
  },
  {
    "name": "org.apache.catalina.connector.Connector"
  },
  {
    "name": "org.apache.catalina.core.ApplicationContextFacade",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addJspFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.util.EventListener"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createFilter",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createServlet",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "declareRoles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributeNames",
        "parameterTypes": []
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getFilterRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilterRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getJspConfigDescriptor",
        "parameterTypes": []
      },
      {
        "name": "getMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getNamedDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRealPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getRequestDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourcePaths",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getServerInfo",
        "parameterTypes": []
      },
      {
        "name": "getServletContextName",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getSessionCookieConfig",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVirtualServerName",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponseCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.apache.catalina.loader.JdbcLeakPrevention",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clearJdbcDriverRegistrations",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.catalina.startup.Tomcat"
  },
  {
    "name": "org.apache.catalina.util.CharsetMapper",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.commons.dbcp2.BasicDataSource"
  },
  {
    "name": "org.apache.commons.logging.Log"
  },
  {
    "name": "org.apache.coyote.AbstractProtocol",
    "methods": [
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getLocalPort",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.apache.coyote.ProtocolHandler"
  },
  {
    "name": "org.apache.coyote.UpgradeProtocol"
  },
  {
    "name": "org.apache.coyote.http11.AbstractHttp11Protocol",
    "methods": [
      {
        "name": "isSSLEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.coyote.http11.Http11NioProtocol",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.el.ExpressionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.hc.client5.http.classic.HttpClient"
  },
  {
    "name": "org.apache.jasper.servlet.JspServlet"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger"
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider"
  },
  {
    "name": "org.apache.pulsar.client.api.PulsarClient"
  },
  {
    "name": "org.apache.tomcat.jdbc.pool.DataSource"
  },
  {
    "name": "org.apache.tomcat.jdbc.pool.DataSourceProxy"
  },
  {
    "name": "org.apache.tomcat.util.net.AbstractEndpoint",
    "methods": [
      {
        "name": "setBindOnInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.apache.tomcat.util.net.NioEndpoint",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsSci"
  },
  {
    "name": "org.aspectj.lang.annotation.AfterThrowing",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "argNames",
        "parameterTypes": []
      },
      {
        "name": "pointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.lang.annotation.Around",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "argNames",
        "parameterTypes": []
      },
      {
        "name": "pointcut",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.lang.annotation.Aspect",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Before",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "argNames",
        "parameterTypes": []
      },
      {
        "name": "pointcut",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.lang.annotation.Pointcut",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.weaver.Advice"
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15AnnotationFinder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.aspectj.weaver.World"
        ]
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.tools.Jdk14TraceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.cache2k.Cache2kBuilder"
  },
  {
    "name": "org.crac.Core"
  },
  {
    "name": "org.crac.Resource"
  },
  {
    "name": "org.eclipse.collections.api.list.ImmutableList"
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.eclipse.jetty.client.HttpClient"
  },
  {
    "name": "org.eclipse.jetty.ee10.webapp.WebAppContext"
  },
  {
    "name": "org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
  },
  {
    "name": "org.eclipse.jetty.server.Server"
  },
  {
    "name": "org.eclipse.jetty.util.Loader"
  },
  {
    "name": "org.eclipse.persistence.internal.jpa.deployment.JavaSECMPInitializerAgent"
  },
  {
    "name": "org.eclipse.persistence.jpa.JpaEntityManager"
  },
  {
    "name": "org.elasticsearch.client.RestClientBuilder"
  },
  {
    "name": "org.flywaydb.core.Flyway"
  },
  {
    "name": "org.glassfish.jersey.server.spring.SpringComponentProvider"
  },
  {
    "name": "org.graalvm.nativeimage.ImageInfo",
    "methods": [
      {
        "name": "inImageCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.Driver"
  },
  {
    "name": "org.h2.server.web.JakartaWebServlet"
  },
  {
    "name": "org.hibernate.Cache"
  },
  {
    "name": "org.hibernate.CacheMode"
  },
  {
    "name": "org.hibernate.Filter"
  },
  {
    "name": "org.hibernate.FlushMode"
  },
  {
    "name": "org.hibernate.HibernateException"
  },
  {
    "name": "org.hibernate.IdentifierLoadAccess"
  },
  {
    "name": "org.hibernate.LobHelper"
  },
  {
    "name": "org.hibernate.LockMode"
  },
  {
    "name": "org.hibernate.LockOptions"
  },
  {
    "name": "org.hibernate.MultiIdentifierLoadAccess"
  },
  {
    "name": "org.hibernate.NaturalIdLoadAccess"
  },
  {
    "name": "org.hibernate.NaturalIdMultiLoadAccess"
  },
  {
    "name": "org.hibernate.ReplicationMode"
  },
  {
    "name": "org.hibernate.Session",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.Session$LockRequest"
  },
  {
    "name": "org.hibernate.SessionBuilder"
  },
  {
    "name": "org.hibernate.SessionEventListener"
  },
  {
    "name": "org.hibernate.SessionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.SharedSessionBuilder"
  },
  {
    "name": "org.hibernate.SharedSessionContract",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "beginTransaction",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "doReturningWork",
        "parameterTypes": [
          "org.hibernate.jdbc.ReturningWork"
        ]
      },
      {
        "name": "doWork",
        "parameterTypes": [
          "org.hibernate.jdbc.Work"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBatchSize",
        "parameterTypes": []
      },
      {
        "name": "getNamedProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTenantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getTenantIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isConnected",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "setJdbcBatchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.SimpleNaturalIdLoadAccess"
  },
  {
    "name": "org.hibernate.StatelessSession"
  },
  {
    "name": "org.hibernate.StatelessSessionBuilder"
  },
  {
    "name": "org.hibernate.Transaction"
  },
  {
    "name": "org.hibernate.UnknownProfileException"
  },
  {
    "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.boot.archive.spi.ArchiveDescriptorFactory"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.boot.beanvalidation.TypeSafeActivator",
    "methods": [
      {
        "name": "activate",
        "parameterTypes": [
          "org.hibernate.boot.beanvalidation.ActivationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.internal.SessionFactoryBuilderImpl"
  },
  {
    "name": "org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport"
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.model.naming.ImplicitNamingStrategy"
  },
  {
    "name": "org.hibernate.boot.model.naming.PhysicalNamingStrategy"
  },
  {
    "name": "org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.spi.SessionFactoryOptions"
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en"
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.cache.internal.DisabledCaching",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.NoCachingRegionFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en"
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.dialect.MySQLDialect",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQL95Dialect"
  },
  {
    "name": "org.hibernate.engine.config.internal.ConfigurationServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setJndiService",
        "parameterTypes": [
          "org.hibernate.engine.jndi.spi.JndiService"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.mutation.internal.StandardMutationExecutorService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.spi.SqlStatementLogger",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.FilterDefinition"
  },
  {
    "name": "org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.SessionImplementor"
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.event.spi.EventType",
    "allDeclaredFields": true
  },
  {
    "name": "org.hibernate.graph.RootGraph"
  },
  {
    "name": "org.hibernate.id.IdentityGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.internal.SessionFactoryImpl"
  },
  {
    "name": "org.hibernate.internal.SessionFactoryObserverChain"
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.log.DeprecationLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.jdbc.ReturningWork"
  },
  {
    "name": "org.hibernate.jdbc.Work"
  },
  {
    "name": "org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.metamodel.model.domain.JpaMetamodel"
  },
  {
    "name": "org.hibernate.persister.collection.BasicCollectionPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.collection.OneToManyPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.internal.PersisterFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.persister.internal.StandardPersisterClassResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.procedure.ProcedureCall"
  },
  {
    "name": "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.proxy.HibernateProxy",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.proxy.ProxyConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.query.MutationQuery"
  },
  {
    "name": "org.hibernate.query.NativeQuery"
  },
  {
    "name": "org.hibernate.query.Query",
    "methods": [
      {
        "name": "getResultList",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.query.QueryProducer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
        ]
      },
      {
        "name": "createNamedMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.SelectionQuery"
  },
  {
    "name": "org.hibernate.query.TypedParameterValue"
  },
  {
    "name": "org.hibernate.query.criteria.HibernateCriteriaBuilder"
  },
  {
    "name": "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en_US"
  },
  {
    "name": "org.hibernate.query.hql.spi.SqmQueryImplementor",
    "methods": [
      {
        "name": "setMaxResults",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.sqm.mutation.internal.SqmMultiTableMutationStrategyProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.relational.SchemaManager"
  },
  {
    "name": "org.hibernate.resource.beans.container.spi.BeanContainer"
  },
  {
    "name": "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.internal.ParameterMarkerStrategyStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en_US"
  },
  {
    "name": "org.hibernate.sql.results.jdbc.internal.JdbcValuesMappingProducerProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.stat.SessionStatistics"
  },
  {
    "name": "org.hibernate.stat.Statistics"
  },
  {
    "name": "org.hibernate.stat.internal.StatisticsImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.tool.schema.internal.Helper"
  },
  {
    "name": "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.tool.schema.internal.SchemaDropperImpl"
  },
  {
    "name": "org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase"
  },
  {
    "name": "org.hibernate.tool.schema.internal.script.SingleLineSqlScriptExtractor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator"
  },
  {
    "name": "org.hibernate.type.SqlTypes",
    "allPublicFields": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
  },
  {
    "name": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
  },
  {
    "name": "org.influxdb.InfluxDB"
  },
  {
    "name": "org.jboss.logging.Logger"
  },
  {
    "name": "org.jmolecules.ddd.annotation.Identity"
  },
  {
    "name": "org.jmolecules.ddd.types.Association"
  },
  {
    "name": "org.joda.time.ReadableInstant"
  },
  {
    "name": "org.jooq.DSLContext"
  },
  {
    "name": "org.modelmapper.Converter"
  },
  {
    "name": "org.modelmapper.ModelMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.modelmapper.Module"
  },
  {
    "name": "org.modelmapper.PropertyMap"
  },
  {
    "name": "org.modelmapper.TypeMap"
  },
  {
    "name": "org.modelmapper.builder.ConfigurableConditionExpression"
  },
  {
    "name": "org.modelmapper.config.Configuration"
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.utility.Invoker",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.utility.Invoker$Dispatcher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.utility.JavaModule$Module",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.internal.bytebuddy.utility.JavaModule$Resolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.spi.DestinationSetter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.neo4j.driver.Driver"
  },
  {
    "name": "org.quartz.Scheduler"
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.Logger"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "log",
        "parameterTypes": [
          "org.slf4j.Marker",
          "java.lang.String",
          "int",
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.FinalprojectApplication",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.FinalprojectApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.Init.DailyChallengeScheduler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.client.RestClient",
          "org.softuni.finalproject.repository.DailyChallengeRepository"
        ]
      },
      {
        "name": "createDailyChallenge",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.Init.SetupDataLoader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.repository.UserRepository",
          "org.softuni.finalproject.repository.RolesRepository",
          "org.softuni.finalproject.repository.PictureRepository",
          "org.springframework.security.crypto.password.PasswordEncoder"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.Init.SetupDataLoader$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.aop.GeneralControllerAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "beforeExecutingMethod",
        "parameterTypes": [
          "org.aspectj.lang.JoinPoint"
        ]
      },
      {
        "name": "debugExecutionTime",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.DropboxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "appKey",
        "parameterTypes": []
      },
      {
        "name": "appSecret",
        "parameterTypes": []
      },
      {
        "name": "dbxRequestConfig",
        "parameterTypes": []
      },
      {
        "name": "dropboxAuthService",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.DropboxConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.DropboxConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.DropboxConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.I18nConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "localeChangeInterceptor",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "messageSource",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.I18nConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.I18nConfig$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.I18nConfig$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.ModelMapperConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "modelMapper",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.ModelMapperConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.ModelMapperConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.ModelMapperConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.RestClientConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "restClient",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.RestClientConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.RestClientConfig$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.RestClientConfig$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.SecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "passwordEncoder",
        "parameterTypes": []
      },
      {
        "name": "securityFilterChain",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.softuni.finalproject.repository.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.SecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.SecurityConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.SecurityConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.WebConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
        ]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.config.WebConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
        ]
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.ChallengeParticipantDTO",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "getUserGuessDTO",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUserGuessDTO",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserGuessDTO"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.ChallengeParticipantDTO$ByteBuddy$xoLhP6ZA",
    "fields": [
      {
        "name": "invocationHandler$v5lpoj1"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.CurrentParticipantDataDTO"
  },
  {
    "name": "org.softuni.finalproject.model.dto.DailyChallengeDTO"
  },
  {
    "name": "org.softuni.finalproject.model.dto.DropboxCredentialDTO"
  },
  {
    "name": "org.softuni.finalproject.model.dto.GameSessionDTO",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDistanceDifferences",
        "parameterTypes": []
      },
      {
        "name": "getPictureLocationDTOS",
        "parameterTypes": []
      },
      {
        "name": "getPictureLocations",
        "parameterTypes": []
      },
      {
        "name": "getRound",
        "parameterTypes": []
      },
      {
        "name": "getRoundDistanceDifference",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRoundScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRoundScores",
        "parameterTypes": []
      },
      {
        "name": "getRoundYearDifference",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getScores",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getTotalScore",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserGuessDTOS",
        "parameterTypes": []
      },
      {
        "name": "getUserGuesses",
        "parameterTypes": []
      },
      {
        "name": "getYearDifferences",
        "parameterTypes": []
      },
      {
        "name": "lastRound",
        "parameterTypes": []
      },
      {
        "name": "nextRound",
        "parameterTypes": []
      },
      {
        "name": "setDistanceDifferences",
        "parameterTypes": [
          "double[]"
        ]
      },
      {
        "name": "setPictureLocationDTOS",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.PictureLocationDTO[]"
        ]
      },
      {
        "name": "setPictureLocations",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.PictureLocationDTO[]"
        ]
      },
      {
        "name": "setRound",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRoundDistanceDifference",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setRoundScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRoundScores",
        "parameterTypes": [
          "int[]"
        ]
      },
      {
        "name": "setRoundYearDifference",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.User"
        ]
      },
      {
        "name": "setUserGuess",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserGuessDTO"
        ]
      },
      {
        "name": "setUserGuessDTOS",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserGuessDTO[]"
        ]
      },
      {
        "name": "setUserGuesses",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserGuessDTO[]"
        ]
      },
      {
        "name": "setYearDifferences",
        "parameterTypes": [
          "int[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.GameSessionDTO$ByteBuddy$WL1d6bOX",
    "fields": [
      {
        "name": "invocationHandler$pvenno0"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.LoggedUserDTO"
  },
  {
    "name": "org.softuni.finalproject.model.dto.PictureDataDTO"
  },
  {
    "name": "org.softuni.finalproject.model.dto.PictureLocationDTO"
  },
  {
    "name": "org.softuni.finalproject.model.dto.RoundInfoDTO"
  },
  {
    "name": "org.softuni.finalproject.model.dto.UserGuessDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.UserGuessDTO_"
  },
  {
    "name": "org.softuni.finalproject.model.dto.UserInfoDTO",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getRegistrationDate",
        "parameterTypes": []
      },
      {
        "name": "getUserRoles",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setRegistrationDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setUserRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.UserInfoDTO$ByteBuddy$069u9AmJ",
    "fields": [
      {
        "name": "invocationHandler$4khl4q0"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.UserRegistrationDTO",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConfirmPassword",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRegistrationDate",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setConfirmPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegistrationDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.dto.UserRegistrationDTO$ByteBuddy$YYmM04YJ",
    "fields": [
      {
        "name": "invocationHandler$j3j0gh1"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.BaseEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.BaseEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.ChallengeParticipantEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDailyChallenge",
        "parameterTypes": []
      },
      {
        "name": "getGuess",
        "parameterTypes": []
      },
      {
        "name": "getScore",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "setDailyChallenge",
        "parameterTypes": [
          "org.softuni.finalproject.model.entity.DailyChallengeEntity"
        ]
      },
      {
        "name": "setGuess",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserGuessDTO"
        ]
      },
      {
        "name": "setScore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "org.softuni.finalproject.model.entity.UserEntity"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.ChallengeParticipantEntity$ByteBuddy$1h49e9Eb",
    "fields": [
      {
        "name": "invocationHandler$4lojdg1"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.ChallengeParticipantEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.DailyChallengeEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.DailyChallengeEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.DropboxCredentialEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.DropboxCredentialEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.GameSessionEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDistanceDifferences",
        "parameterTypes": []
      },
      {
        "name": "getGuesses",
        "parameterTypes": []
      },
      {
        "name": "getPictures",
        "parameterTypes": []
      },
      {
        "name": "getPlayer",
        "parameterTypes": []
      },
      {
        "name": "getRoundScores",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getYearDifferences",
        "parameterTypes": []
      },
      {
        "name": "setDistanceDifferences",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGuesses",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPictures",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPlayer",
        "parameterTypes": [
          "org.softuni.finalproject.model.entity.UserEntity"
        ]
      },
      {
        "name": "setRoundScores",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setYearDifferences",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.GameSessionEntity$ByteBuddy$7y7RHRb5",
    "fields": [
      {
        "name": "invocationHandler$9388jl0"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.GameSessionEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.PictureEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.PictureEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getDropboxCredential",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRegistrationDate",
        "parameterTypes": []
      },
      {
        "name": "getUserRoles",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "setDropboxCredential",
        "parameterTypes": [
          "org.softuni.finalproject.model.entity.DropboxCredentialEntity"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegistrationDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setUserRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserEntity$ByteBuddy$ZcwfNXbo",
    "fields": [
      {
        "name": "invocationHandler$4lojdg1"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserEntity$ByteBuddy$bO5LCHPb",
    "fields": [
      {
        "name": "invocationHandler$beak8m1"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserEntity$ByteBuddy$iyzyohND",
    "fields": [
      {
        "name": "invocationHandler$eilfn20"
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserGuess",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserGuess_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserRoleEntity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.model.entity.UserRoleEntity_"
  },
  {
    "name": "org.softuni.finalproject.model.entity.package-info"
  },
  {
    "name": "org.softuni.finalproject.model.enums.UserRoleEnum"
  },
  {
    "name": "org.softuni.finalproject.repository.DailyChallengeRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.repository.DropboxCredentialRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.repository.GameSessionRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.repository.PictureRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.repository.RolesRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.repository.UserRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.DailyChallengeAPIService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.DailyChallengeService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.DropboxAuthService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.DropboxCredentialService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.DropboxService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.GameService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.softuni.finalproject.service.GameSessionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.PictureService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.UserAuthService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.UserService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.softuni.finalproject.service.exception.UserNotFound"
  },
  {
    "name": "org.softuni.finalproject.service.impl.DailyChallengeAPIServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.repository.DailyChallengeRepository",
          "org.softuni.finalproject.service.GameService",
          "org.softuni.finalproject.repository.PictureRepository",
          "org.softuni.finalproject.repository.UserRepository",
          "org.modelmapper.ModelMapper"
        ]
      },
      {
        "name": "addParticipant",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.DailyChallengeDTO"
        ]
      },
      {
        "name": "create",
        "parameterTypes": []
      },
      {
        "name": "currentGuessDistance",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.DailyChallengeDTO",
          "java.lang.String"
        ]
      },
      {
        "name": "getCurrentChallenge",
        "parameterTypes": []
      },
      {
        "name": "getForCurrentUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParticipantScore",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.ChallengeParticipantDTO",
          "int"
        ]
      },
      {
        "name": "setUserGuess",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.ChallengeParticipantDTO",
          "org.softuni.finalproject.model.dto.UserGuessDTO"
        ]
      },
      {
        "name": "userAlreadyParticipated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.DailyChallengeClientService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.client.RestClient",
          "org.softuni.finalproject.repository.DailyChallengeRepository"
        ]
      },
      {
        "name": "getCurrentChallengerData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDailyChallenge",
        "parameterTypes": []
      },
      {
        "name": "setParticipant",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.DailyChallengeDTO"
        ]
      },
      {
        "name": "userAlreadyParticipated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.DropboxAuthServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "authoriseUrl",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCredentials",
        "parameterTypes": []
      },
      {
        "name": "setCredentials",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.DropboxCredentialServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.repository.DropboxCredentialRepository",
          "org.softuni.finalproject.service.UserAuthService",
          "org.softuni.finalproject.service.UserService",
          "com.dropbox.core.DbxRequestConfig"
        ]
      },
      {
        "name": "checkCredentialValidation",
        "parameterTypes": [
          "com.dropbox.core.oauth.DbxCredential"
        ]
      },
      {
        "name": "setCredentialToAdmin",
        "parameterTypes": [
          "com.dropbox.core.oauth.DbxCredential"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.DropboxServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.dropbox.core.DbxRequestConfig",
          "org.softuni.finalproject.service.UserAuthService",
          "org.softuni.finalproject.service.UserService",
          "org.softuni.finalproject.service.DropboxCredentialService",
          "org.modelmapper.ModelMapper"
        ]
      },
      {
        "name": "getUserDropboxCredential",
        "parameterTypes": []
      },
      {
        "name": "uploadFile",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartFile",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.GameServiceImpl",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "calculateDailyScore",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.DailyChallengeDTO"
        ]
      },
      {
        "name": "calculateRoundScore",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.GameSessionDTO"
        ]
      },
      {
        "name": "getCurrentGame",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession"
        ]
      },
      {
        "name": "getCurrentLocation",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.GameSessionDTO",
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDailyGuessDistance",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.DailyChallengeDTO",
          "org.softuni.finalproject.model.dto.UserGuessDTO"
        ]
      },
      {
        "name": "setDailyGuess",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserGuessDTO",
          "org.softuni.finalproject.model.dto.DailyChallengeDTO"
        ]
      },
      {
        "name": "setUserGuess",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserGuessDTO",
          "org.softuni.finalproject.model.dto.GameSessionDTO"
        ]
      },
      {
        "name": "startGame",
        "parameterTypes": [
          "jakarta.servlet.http.HttpSession"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.GameServiceImpl$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.GameSessionServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.repository.GameSessionRepository",
          "org.softuni.finalproject.service.UserService",
          "org.modelmapper.ModelMapper",
          "org.softuni.finalproject.service.PictureService"
        ]
      },
      {
        "name": "getRoundInfo",
        "parameterTypes": [
          "int",
          "jakarta.servlet.http.HttpSession"
        ]
      },
      {
        "name": "saveGameSession",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.GameSessionDTO"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.PictureServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.repository.PictureRepository",
          "org.modelmapper.ModelMapper"
        ]
      },
      {
        "name": "createPictureLocations",
        "parameterTypes": []
      },
      {
        "name": "getCurrentGamePictures",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.PictureLocationDTO[]"
        ]
      },
      {
        "name": "savePicture",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "int",
          "double",
          "double"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.UserAuthServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.repository.UserRepository",
          "org.modelmapper.ModelMapper"
        ]
      },
      {
        "name": "getCurrentUsername",
        "parameterTypes": []
      },
      {
        "name": "getUserInformation",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.UserDetailsServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "loadUserByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.service.impl.UserServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.repository.UserRepository",
          "org.modelmapper.ModelMapper",
          "org.softuni.finalproject.repository.RolesRepository",
          "org.softuni.finalproject.repository.GameSessionRepository"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "demoteAdminToUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllUsers",
        "parameterTypes": []
      },
      {
        "name": "getBestGames",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "promoteUserToAdmin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "register",
        "parameterTypes": [
          "org.softuni.finalproject.model.dto.UserRegistrationDTO"
        ]
      },
      {
        "name": "saveUser",
        "parameterTypes": [
          "org.softuni.finalproject.model.entity.UserEntity"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.validation.user.ConfirmPassword",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.softuni.finalproject.web.DailyChallengeAPIController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.DailyChallengeAPIService"
        ]
      },
      {
        "name": "createChallenge",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.DailyChallengeAPIController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.DailyChallengeClientController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.DailyChallengeService",
          "org.softuni.finalproject.service.DailyChallengeAPIService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.DailyChallengeClientController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.DropboxAuthController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.DropboxAuthService",
          "org.softuni.finalproject.service.DropboxCredentialService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.DropboxAuthController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.DropboxExceptionController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.DropboxExceptionController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.GameController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.GameService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.GameController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.GlobalExceptionController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.GlobalExceptionController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.HomeController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "homeNotLoggedIn",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContext"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.HomeController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ImageLocationUploadController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.DropboxService",
          "org.softuni.finalproject.service.PictureService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ImageLocationUploadController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ManageUsersController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.UserService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ManageUsersController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.MapsController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.GameService",
          "org.softuni.finalproject.service.DailyChallengeService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.MapsController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ProfileController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.UserAuthService",
          "org.softuni.finalproject.service.UserService",
          "org.softuni.finalproject.service.GameSessionService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ProfileController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ResultController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.GameService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.ResultController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.SummaryController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.GameSessionService",
          "org.softuni.finalproject.service.GameService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.SummaryController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.UserController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.softuni.finalproject.service.UserService"
        ]
      }
    ]
  },
  {
    "name": "org.softuni.finalproject.web.UserController$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isPerInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.aop.TargetClassAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTargetClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.TargetSource"
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AopConfigException"
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedProxyFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setTargetBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aot.generate.Generated",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.generate.GenerationContext"
  },
  {
    "name": "org.springframework.aot.hint.RuntimeHints"
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.ReflectiveRuntimeHintsRegistrar"
  },
  {
    "name": "org.springframework.batch.core.launch.JobLauncher"
  },
  {
    "name": "org.springframework.beans.BeanWrapper"
  },
  {
    "name": "org.springframework.beans.BeansException"
  },
  {
    "name": "org.springframework.beans.TypeConverter"
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.ListableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.ObjectFactory"
  },
  {
    "name": "org.springframework.beans.factory.ObjectProvider"
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "isBeanExcludedFromAotProcessing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.BeanDefinition"
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.support.AbstractBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistry"
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.DefaultSingletonBeanRegistry"
  },
  {
    "name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.support.RegisteredBean"
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ansi.AnsiOutput$Enabled",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnJndiCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$JpaRepositoriesImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": []
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort"
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      },
      {
        "name": "jsonMixinModuleEntries",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceCheckpointRestoreConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
          "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
        ]
      },
      {
        "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcClient",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getXaDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$HibernateRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
        ]
      },
      {
        "name": "openEntityManagerInViewInterceptor",
        "parameterTypes": []
      },
      {
        "name": "openEntityManagerInViewInterceptorConfigurer",
        "parameterTypes": [
          "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceManagedTypes",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "securityFilterChainRegistration",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.SecurityProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.DefaultCookieSerializerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.HazelcastSessionConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcSessionConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.MongoSessionConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.RedisSessionConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$DefaultCookieSerializerCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cookieSerializer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$RememberMeServicesConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rememberMeServicesCookieSerializerCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$ServletSessionRepositoryConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "fileWatcher",
        "parameterTypes": []
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.FileWatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "registerBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundleRegistry"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isExcluded",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.beans.factory.config.BeanDefinition",
          "java.lang.Class"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskExecutorBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "threadPoolTaskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledBeanLazyInitializationExcludeFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskSchedulerBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskScheduler",
        "parameterTypes": [
          "org.springframework.boot.task.TaskSchedulerBuilder",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "threadPoolTaskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thread.Threading"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "templateEngine",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$ReactiveTemplateEngineConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "defaultTemplateResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "securityDialect",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "thymeleafViewResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.thymeleaf.spring6.SpringTemplateEngine"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionExecutionListeners",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationConfigurationCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.client.RestClient$Builder"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "httpMessageConvertersRestClientCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientSsl",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientSsl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletUrlMapping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addUrlMappings",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "setUrlMappings",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": []
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": []
      },
      {
        "name": "multipartResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "formContentFilter",
        "parameterTypes": []
      },
      {
        "name": "hiddenHttpMethodFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "welcomePageHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "welcomePageNotAcceptableHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "defaultViewResolver",
        "parameterTypes": []
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "requestContextFilter",
        "parameterTypes": []
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "viewResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePage"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveErrorView",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "org.springframework.http.HttpStatus",
          "java.util.Map"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "basicErrorController",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "registerErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPageRegistry"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.AvailabilityChangeEvent"
  },
  {
    "name": "org.springframework.boot.availability.AvailabilityState"
  },
  {
    "name": "org.springframework.boot.availability.LivenessState"
  },
  {
    "name": "org.springframework.boot.availability.ReadinessState"
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.TypeExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundAction",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "this$0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Nested",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.source.ConfigurationProperty"
  },
  {
    "name": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
  },
  {
    "name": "org.springframework.boot.convert.DurationUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.BuildProperties"
  },
  {
    "name": "org.springframework.boot.info.GitProperties"
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponent$Scope"
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
  },
  {
    "name": "org.springframework.boot.jdbc.DataSourceBuilder"
  },
  {
    "name": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.XADataSourceWrapper"
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata"
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.launch.JarLauncher"
  },
  {
    "name": "org.springframework.boot.loader.launch.LaunchedClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.launch.Launcher"
  },
  {
    "name": "org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder"
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "initializeDatabase",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationMode"
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationSettings"
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addBundleUpdateHandler",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "updateBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
  },
  {
    "name": "org.springframework.boot.ssl.NoSuchSslBundleException"
  },
  {
    "name": "org.springframework.boot.ssl.SslBundle"
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorCustomizer"
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerCustomizer"
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
  },
  {
    "name": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory",
    "methods": [
      {
        "name": "toMetadataReaderFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder"
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConnectorCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
        ]
      },
      {
        "name": "addContextCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
        ]
      },
      {
        "name": "addEngineValves",
        "parameterTypes": [
          "org.apache.catalina.Valve[]"
        ]
      },
      {
        "name": "addProtocolHandlerCustomizers",
        "parameterTypes": [
          "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBaseDirectory",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
  },
  {
    "name": "org.springframework.boot.web.error.ErrorAttributeOptions"
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslBundles",
        "parameterTypes": []
      },
      {
        "name": "getSslStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      },
      {
        "name": "setSslStoreProvider",
        "parameterTypes": [
          "org.springframework.boot.web.server.SslStoreProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression"
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPage"
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2"
  },
  {
    "name": "org.springframework.boot.web.server.MimeMappings"
  },
  {
    "name": "org.springframework.boot.web.server.Shutdown"
  },
  {
    "name": "org.springframework.boot.web.server.Ssl"
  },
  {
    "name": "org.springframework.boot.web.server.SslStoreProvider"
  },
  {
    "name": "org.springframework.boot.web.server.WebServer"
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addServletNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "addServletRegistrationBeans",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
        ]
      },
      {
        "name": "addUrlPatterns",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "determineDispatcherTypes",
        "parameterTypes": []
      },
      {
        "name": "getFilterName",
        "parameterTypes": []
      },
      {
        "name": "getServletNames",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistrationBeans",
        "parameterTypes": []
      },
      {
        "name": "getUrlPatterns",
        "parameterTypes": []
      },
      {
        "name": "isMatchAfter",
        "parameterTypes": []
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "jakarta.servlet.DispatcherType",
          "jakarta.servlet.DispatcherType[]"
        ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.EnumSet"
        ]
      },
      {
        "name": "setMatchAfter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServletNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setServletRegistrationBeans",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setUrlPatterns",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DispatcherType"
  },
  {
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "jakarta.servlet.Registration$Dynamic"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "isAsyncSupported",
        "parameterTypes": []
      },
      {
        "name": "setAsyncSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreRegistrationFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean"
  },
  {
    "name": "org.springframework.boot.web.servlet.RegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "onStartup",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMultipartConfig",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "getUrlMappings",
        "parameterTypes": []
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMultipartConfig",
        "parameterTypes": [
          "jakarta.servlet.MultipartConfigElement"
        ]
      },
      {
        "name": "setServlet",
        "parameterTypes": [
          "jakarta.servlet.Servlet"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistrar"
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addCookieSameSiteSuppliers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
        ]
      },
      {
        "name": "addInitializers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "addWebListeners",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getCookieSameSiteSuppliers",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDocumentRoot",
        "parameterTypes": []
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getLocaleCharsetMappings",
        "parameterTypes": []
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCookieSameSiteSuppliers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDocumentRoot",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJsp",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Jsp"
        ]
      },
      {
        "name": "setLocaleCharsetMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Session"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp"
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session"
  },
  {
    "name": "org.springframework.cache.Cache"
  },
  {
    "name": "org.springframework.cache.CacheManager"
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport"
  },
  {
    "name": "org.springframework.context.ApplicationContext"
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationContextException"
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer"
  },
  {
    "name": "org.springframework.context.ApplicationEvent"
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisher"
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "supportsAsyncExecution",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ConfigurableApplicationContext"
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.HierarchicalMessageSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.MessageSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.MessageSourceAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.MessageSourceResolvable"
  },
  {
    "name": "org.springframework.context.NoSuchMessageException"
  },
  {
    "name": "org.springframework.context.PayloadApplicationEvent"
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetadataReaderFactory",
        "parameterTypes": [
          "org.springframework.core.type.classreading.MetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.EnableAspectJAutoProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.ContextClosedEvent"
  },
  {
    "name": "org.springframework.context.event.ContextRefreshedEvent"
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener"
  },
  {
    "name": "org.springframework.context.i18n.LocaleContext"
  },
  {
    "name": "org.springframework.context.support.AbstractApplicationContext"
  },
  {
    "name": "org.springframework.context.support.AbstractMessageSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMessage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.util.Locale"
        ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [
          "org.springframework.context.MessageSourceResolvable",
          "java.util.Locale"
        ]
      },
      {
        "name": "getParentMessageSource",
        "parameterTypes": []
      },
      {
        "name": "setCommonMessages",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setParentMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setUseCodeAsDefaultMessage",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.AbstractResourceBasedMessageSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addBasenames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getBasenameSet",
        "parameterTypes": []
      },
      {
        "name": "setBasename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBasenames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setCacheMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCacheSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDefaultEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setFallbackToSystemLocale",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
  },
  {
    "name": "org.springframework.context.support.MessageSourceAccessor"
  },
  {
    "name": "org.springframework.context.support.MessageSourceSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setAlwaysUseMessageFormat",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ReloadableResourceBundleMessageSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder"
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.MethodParameter"
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.ParameterNameDiscoverer"
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ReactiveAdapterRegistry"
  },
  {
    "name": "org.springframework.core.ResolvableType"
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.MergedAnnotation"
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.convert.TypeDescriptor"
  },
  {
    "name": "org.springframework.core.convert.converter.Converter"
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterFactory"
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.convert.converter.GenericConverter"
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.env.ConfigurableEnvironment"
  },
  {
    "name": "org.springframework.core.env.Environment"
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.io.Resource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.ResourceLoader"
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setFileEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setPropertiesArray",
        "parameterTypes": [
          "java.util.Properties[]"
        ]
      },
      {
        "name": "setPropertiesPersister",
        "parameterTypes": [
          "org.springframework.util.PropertiesPersister"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.SimpleAsyncTaskExecutor"
  },
  {
    "name": "org.springframework.core.task.TaskDecorator"
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.type.AnnotationMetadata"
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.dao.DataAccessException"
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.annotation.QueryAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.cassandra.ReactiveSession"
  },
  {
    "name": "org.springframework.data.domain.Example"
  },
  {
    "name": "org.springframework.data.domain.ManagedTypes"
  },
  {
    "name": "org.springframework.data.domain.OffsetScrollPosition"
  },
  {
    "name": "org.springframework.data.domain.Page"
  },
  {
    "name": "org.springframework.data.domain.Pageable"
  },
  {
    "name": "org.springframework.data.domain.Sort"
  },
  {
    "name": "org.springframework.data.domain.Unpaged"
  },
  {
    "name": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
  },
  {
    "name": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
  },
  {
    "name": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
  },
  {
    "name": "org.springframework.data.envers.repository.config.EnableEnversRepositories"
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toMappingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaPersistentEntityImpl"
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaPersistentProperty"
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaSpecificationExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "countName",
        "parameterTypes": []
      },
      {
        "name": "countQuery",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "nativeQuery",
        "parameterTypes": []
      },
      {
        "name": "queryRewriter",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension$JpaRepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
  },
  {
    "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": []
      },
      {
        "name": "getQueryHintsForCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEntityPathResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      },
      {
        "name": "setQueryMethodFactory",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.JpaEntityInformation",
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "existsByDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByUserRole",
        "parameterTypes": [
          "org.softuni.finalproject.model.enums.UserRoleEnum"
        ]
      },
      {
        "name": "findByUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findRandomDailyPicture",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.EscapeCharacter"
        ]
      },
      {
        "name": "setRepositoryMethodMetadata",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.CrudMethodMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.ldap.repository.LdapRepository"
  },
  {
    "name": "org.springframework.data.mapping.MappingException"
  },
  {
    "name": "org.springframework.data.mapping.PersistentEntity"
  },
  {
    "name": "org.springframework.data.mapping.PersistentProperty"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyPath"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyPaths"
  },
  {
    "name": "org.springframework.data.mapping.PropertyPath"
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setManagedTypes",
        "parameterTypes": [
          "org.springframework.data.domain.ManagedTypes"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.InvalidPersistentPropertyPath"
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.model.MutablePersistentEntity"
  },
  {
    "name": "org.springframework.data.mapping.model.Property"
  },
  {
    "name": "org.springframework.data.mapping.model.SimpleTypeHolder"
  },
  {
    "name": "org.springframework.data.mongodb.core.MongoOperations"
  },
  {
    "name": "org.springframework.data.querydsl.EntityPathResolver"
  },
  {
    "name": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionFactory"
  },
  {
    "name": "org.springframework.data.redis.core.RedisOperations"
  },
  {
    "name": "org.springframework.data.redis.core.RedisTemplate"
  },
  {
    "name": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
  },
  {
    "name": "org.springframework.data.repository.CrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.ListCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.ListPagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.config.AotRepositoryContext"
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfigurationAdapter",
    "methods": [
      {
        "name": "toRepositoryConfiguration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfigurationSource"
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryRegistrationAotContribution"
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConfigMap",
        "parameterTypes": []
      },
      {
        "name": "processAheadOfTime",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RegisteredBean"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setConfigMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.EntityInformation"
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryInformation"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup$InvokedMethod"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup$MethodPredicate"
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNamedQueries",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addRepositoryFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
        ]
      },
      {
        "name": "getEntityInformation",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": []
      },
      {
        "name": "getQueryMethods",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryInformation",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setCustomImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryBaseClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryInvocationMulticaster"
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery"
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryMethod"
  },
  {
    "name": "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
  },
  {
    "name": "org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
  },
  {
    "name": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections.EclipseCollections"
  },
  {
    "name": "org.springframework.data.util.CustomCollections.VavrCollections"
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.data.util.Streamable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "stream",
        "parameterTypes": []
      },
      {
        "name": "toList",
        "parameterTypes": []
      },
      {
        "name": "toSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.TypeInformation"
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setOffsetParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "isFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.method.support.ModelAndViewContainer",
          "org.springframework.web.context.request.NativeWebRequest",
          "org.springframework.web.bind.support.WebDataBinderFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPropertyDelimiter",
        "parameterTypes": []
      },
      {
        "name": "setFallbackSort",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "setPropertyDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.OffsetScrollPositionHandlerMethodArgumentResolverCustomizer"
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": []
      },
      {
        "name": "pageModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "offsetResolver",
        "parameterTypes": []
      },
      {
        "name": "pageableResolver",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.format.AnnotationFormatterFactory"
  },
  {
    "name": "org.springframework.format.Formatter"
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.format.Parser"
  },
  {
    "name": "org.springframework.format.Printer"
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.hateoas.EntityModel"
  },
  {
    "name": "org.springframework.hateoas.Link"
  },
  {
    "name": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
  },
  {
    "name": "org.springframework.http.CacheControl"
  },
  {
    "name": "org.springframework.http.HttpHeaders"
  },
  {
    "name": "org.springframework.http.HttpInputMessage"
  },
  {
    "name": "org.springframework.http.HttpMethod"
  },
  {
    "name": "org.springframework.http.HttpOutputMessage"
  },
  {
    "name": "org.springframework.http.HttpStatus"
  },
  {
    "name": "org.springframework.http.MediaType"
  },
  {
    "name": "org.springframework.http.ReactiveHttpInputMessage"
  },
  {
    "name": "org.springframework.http.ResponseEntity"
  },
  {
    "name": "org.springframework.http.client.ClientHttpResponse"
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addDefaultHeaders",
        "parameterTypes": [
          "org.springframework.http.HttpHeaders",
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getContentLength",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "supportsRepeatableWrites",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      },
      {
        "name": "writeInternal",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.FormHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.HttpMessageNotReadableException"
  },
  {
    "name": "org.springframework.http.converter.HttpMessageNotWritableException"
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.GsonHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"
  },
  {
    "name": "org.springframework.http.server.PathContainer"
  },
  {
    "name": "org.springframework.http.server.PathContainer$Options"
  },
  {
    "name": "org.springframework.http.server.RequestPath"
  },
  {
    "name": "org.springframework.http.server.observation.ServerRequestObservationContext"
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler"
  },
  {
    "name": "org.springframework.instrument.InstrumentationSavingAgent"
  },
  {
    "name": "org.springframework.instrument.classloading.LoadTimeWeaver"
  },
  {
    "name": "org.springframework.integration.config.EnableIntegration"
  },
  {
    "name": "org.springframework.jdbc.SQLWarningException"
  },
  {
    "name": "org.springframework.jdbc.core.BatchPreparedStatementSetter"
  },
  {
    "name": "org.springframework.jdbc.core.CallableStatementCallback"
  },
  {
    "name": "org.springframework.jdbc.core.CallableStatementCreator"
  },
  {
    "name": "org.springframework.jdbc.core.ConnectionCallback"
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "int[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.ConnectionCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.StatementCallback"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementCallback"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementCreator"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementCreatorFactory"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementSetter"
  },
  {
    "name": "org.springframework.jdbc.core.ResultSetExtractor"
  },
  {
    "name": "org.springframework.jdbc.core.ResultSetSupportingSqlParameter"
  },
  {
    "name": "org.springframework.jdbc.core.RowCallbackHandler"
  },
  {
    "name": "org.springframework.jdbc.core.RowMapper"
  },
  {
    "name": "org.springframework.jdbc.core.SqlParameter"
  },
  {
    "name": "org.springframework.jdbc.core.StatementCallback"
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "getJdbcOperations",
        "parameterTypes": []
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.ParsedSql"
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.SqlParameterSource"
  },
  {
    "name": "org.springframework.jdbc.core.simple.DefaultJdbcClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "sql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient$StatementSpec"
  },
  {
    "name": "org.springframework.jdbc.datasource.DataSourceTransactionManager"
  },
  {
    "name": "org.springframework.jdbc.datasource.DelegatingDataSource"
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
  },
  {
    "name": "org.springframework.jdbc.datasource.init.DatabasePopulator"
  },
  {
    "name": "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
  },
  {
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "isLazyInit",
        "parameterTypes": []
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.support.KeyHolder"
  },
  {
    "name": "org.springframework.jdbc.support.SQLExceptionTranslator"
  },
  {
    "name": "org.springframework.jdbc.support.rowset.SqlRowSet"
  },
  {
    "name": "org.springframework.jms.core.JmsTemplate"
  },
  {
    "name": "org.springframework.jmx.export.MBeanExporter"
  },
  {
    "name": "org.springframework.jndi.JndiObjectFactoryBean"
  },
  {
    "name": "org.springframework.kafka.core.KafkaTemplate"
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.ldap.core.ContextSource"
  },
  {
    "name": "org.springframework.mail.javamail.JavaMailSenderImpl"
  },
  {
    "name": "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
  },
  {
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryAccessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEntityManagerFactory",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaDialect"
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getResourceFactory",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager$JpaTransactionObject"
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setLoadTimeWeaver",
        "parameterTypes": [
          "org.springframework.instrument.classloading.LoadTimeWeaver"
        ]
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.ManagedClassNameFilter"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getManagedClassNames",
        "parameterTypes": []
      },
      {
        "name": "getManagedPackages",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitRootUrl",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter"
  },
  {
    "name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterCompletion",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "java.lang.Exception"
        ]
      },
      {
        "name": "afterConcurrentHandlingStarted",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postHandle",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest",
          "org.springframework.ui.ModelMap"
        ]
      },
      {
        "name": "preHandle",
        "parameterTypes": [
          "org.springframework.web.context.request.WebRequest"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.Database"
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaDialect"
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerFactoryInterface",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceUnitInfo"
        ]
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProviderRootPackage",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider"
  },
  {
    "name": "org.springframework.oxm.Marshaller"
  },
  {
    "name": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
  },
  {
    "name": "org.springframework.r2dbc.connection.init.DatabasePopulator"
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "prefersShortLivedTasks",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.Trigger"
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableScheduling",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Scheduled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Schedules",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledAnnotationProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "initiateShutdown",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextClosedEvent"
        ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getClock",
        "parameterTypes": []
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant"
        ]
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "org.springframework.scheduling.Trigger"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskHolder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.AccessDeniedException"
  },
  {
    "name": "org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createSecurityExpressionRoot",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionOperations",
    "methods": [
      {
        "name": "hasRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAuthenticated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationDetailsSource"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManagerResolver"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationTrustResolver"
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "publishAuthenticationFailure",
        "parameterTypes": [
          "org.springframework.security.core.AuthenticationException",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "publishAuthenticationSuccess",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.ProviderManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.ReactiveAuthenticationManager"
  },
  {
    "name": "org.springframework.security.authentication.UsernamePasswordAuthenticationToken"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationDecision"
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationEventPublisher"
  },
  {
    "name": "org.springframework.security.authorization.AuthorizationManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "verify",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.Customizer"
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurer"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
        ]
      },
      {
        "name": "getConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getOrBuild",
        "parameterTypes": []
      },
      {
        "name": "getSharedObject",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSharedObjects",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "removeConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "removeConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "with",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter",
          "org.springframework.security.config.Customizer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.ObjectPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationEventPublisher"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "eraseCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultUserDetailsService",
        "parameterTypes": []
      },
      {
        "name": "isConfigured",
        "parameterTypes": []
      },
      {
        "name": "ldapAuthentication",
        "parameterTypes": []
      },
      {
        "name": "parentAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationManagerBuilder",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "enableGlobalAuthenticationAutowiredConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeAuthenticationProviderBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeUserDetailsBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setGlobalAuthenticationConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "inMemoryAuthentication",
        "parameterTypes": []
      },
      {
        "name": "jdbcAuthentication",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "init",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsAwareConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      },
      {
        "name": "addFilterAfter",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilterBefore",
        "parameterTypes": [
          "jakarta.servlet.Filter",
          "java.lang.Class"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity$RequestMatcherConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity$IgnoredRequestConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "httpSecurity",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAuthenticationConfiguration",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "setContentNegotiationStrategy",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationStrategy"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$1",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getFilterChains",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterChainDecorator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
        ]
      },
      {
        "name": "setFilterChainValidator",
        "parameterTypes": [
          "org.springframework.security.web.FilterChainProxy$FilterChainValidator"
        ]
      },
      {
        "name": "setFirewall",
        "parameterTypes": [
          "org.springframework.security.web.firewall.HttpFirewall"
        ]
      },
      {
        "name": "setRequestRejectedHandler",
        "parameterTypes": [
          "org.springframework.security.web.firewall.RequestRejectedHandler"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": []
      },
      {
        "name": "delegatingApplicationListener",
        "parameterTypes": []
      },
      {
        "name": "privilegeEvaluator",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setFilterChainProxySecurityConfigurer",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "springSecurityFilterChain",
        "parameterTypes": []
      },
      {
        "name": "webSecurityExpressionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.CorsConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.CsrfConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.JeeConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.LogoutConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.SecurityContextConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.ServletApiConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.X509Configurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.client.OidcLogoutConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.saml2.Saml2LogoutConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configurers.saml2.Saml2MetadataConfigurer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
  },
  {
    "name": "org.springframework.security.config.crypto.RsaKeyConversionServicePostProcessor",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.http.SessionCreationPolicy"
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.core.Authentication"
  },
  {
    "name": "org.springframework.security.core.AuthenticationException"
  },
  {
    "name": "org.springframework.security.core.GrantedAuthority"
  },
  {
    "name": "org.springframework.security.core.annotation.CurrentSecurityContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.context.SecurityContext"
  },
  {
    "name": "org.springframework.security.core.context.SecurityContextHolderStrategy"
  },
  {
    "name": "org.springframework.security.core.userdetails.User",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetails"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UsernameNotFoundException"
  },
  {
    "name": "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "encode",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "matches",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "upgradeEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.crypto.password.PasswordEncoder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ClientRegistration"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"
  },
  {
    "name": "org.springframework.security.oauth2.jwt.JwtDecoder"
  },
  {
    "name": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.BearerTokenError"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector"
  },
  {
    "name": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
  },
  {
    "name": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
  },
  {
    "name": "org.springframework.security.web.AuthenticationEntryPoint",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.DefaultSecurityFilterChain",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "toFilter",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy$FilterChainDecorator"
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy$FilterChainValidator"
  },
  {
    "name": "org.springframework.security.web.PortMapper"
  },
  {
    "name": "org.springframework.security.web.PortResolver"
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandler"
  },
  {
    "name": "org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.access.ExceptionTranslationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "isAllowed",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.expression.WebSecurityExpressionRoot",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.intercept.AuthorizationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "check",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager$Builder"
  },
  {
    "name": "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      },
      {
        "name": "getRememberMeServices",
        "parameterTypes": []
      },
      {
        "name": "setAllowSessionCreation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAuthenticationDetailsSource",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationDetailsSource"
        ]
      },
      {
        "name": "setAuthenticationFailureHandler",
        "parameterTypes": [
          "org.springframework.security.web.authentication.AuthenticationFailureHandler"
        ]
      },
      {
        "name": "setAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      },
      {
        "name": "setAuthenticationSuccessHandler",
        "parameterTypes": [
          "org.springframework.security.web.authentication.AuthenticationSuccessHandler"
        ]
      },
      {
        "name": "setContinueChainBeforeSuccessfulAuthentication",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFilterProcessesUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setRememberMeServices",
        "parameterTypes": [
          "org.springframework.security.web.authentication.RememberMeServices"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      },
      {
        "name": "setSecurityContextRepository",
        "parameterTypes": [
          "org.springframework.security.web.context.SecurityContextRepository"
        ]
      },
      {
        "name": "setSessionAuthenticationStrategy",
        "parameterTypes": [
          "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.AuthenticationFailureHandler"
  },
  {
    "name": "org.springframework.security.web.authentication.AuthenticationSuccessHandler"
  },
  {
    "name": "org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "commence",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.RememberMeServices"
  },
  {
    "name": "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "attemptAuthentication",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "logout",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAlwaysCreateSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.SessionAuthenticationException"
  },
  {
    "name": "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
  },
  {
    "name": "org.springframework.security.web.context.SecurityContextHolderFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.context.SecurityContextRepository"
  },
  {
    "name": "org.springframework.security.web.csrf.CsrfFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.csrf.CsrfTokenRequestHandler"
  },
  {
    "name": "org.springframework.security.web.firewall.FirewalledRequest"
  },
  {
    "name": "org.springframework.security.web.firewall.HttpFirewall"
  },
  {
    "name": "org.springframework.security.web.firewall.RequestRejectedHandler"
  },
  {
    "name": "org.springframework.security.web.header.HeaderWriterFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.server.csrf.CsrfToken"
  },
  {
    "name": "org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getExtraHiddenFields",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "processAction",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processFormFieldValue",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processUrl",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "matcher",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "matches",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.servletapi.HttpServletRequestFactory"
  },
  {
    "name": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.util.ThrowableAnalyzer"
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher$MatchResult"
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcherEntry"
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestVariablesExtractor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.session.Session"
  },
  {
    "name": "org.springframework.session.SessionRepository"
  },
  {
    "name": "org.springframework.session.data.mongo.MongoIndexedSessionRepository"
  },
  {
    "name": "org.springframework.session.data.redis.RedisIndexedSessionRepository"
  },
  {
    "name": "org.springframework.session.hazelcast.HazelcastIndexedSessionRepository"
  },
  {
    "name": "org.springframework.session.jdbc.JdbcIndexedSessionRepository"
  },
  {
    "name": "org.springframework.session.web.http.CookieHttpSessionIdResolver"
  },
  {
    "name": "org.springframework.session.web.http.CookieSerializer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.session.web.http.CookieSerializer$CookieValue"
  },
  {
    "name": "org.springframework.session.web.http.DefaultCookieSerializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "readCookieValues",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "writeCookieValue",
        "parameterTypes": [
          "org.springframework.session.web.http.CookieSerializer$CookieValue"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.session.web.http.HttpSessionIdResolver"
  },
  {
    "name": "org.springframework.session.web.http.SessionRepositoryFilter"
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.ConfigurableTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.transaction.TransactionExecutionListener"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.ReactiveTransactionManager"
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.TransactionException"
  },
  {
    "name": "org.springframework.transaction.TransactionExecutionListener"
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.TransactionStatus"
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionRuntimeHints"
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.aspectj.AbstractTransactionAspect"
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory"
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getPointcut",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttribute"
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.jta.JtaTransactionManager"
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionalOperator"
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionExecutionListeners",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setTransactionExecutionListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionStatus"
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionCallback"
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "executeWithoutResult",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ui.Model"
  },
  {
    "name": "org.springframework.ui.ModelMap"
  },
  {
    "name": "org.springframework.ui.context.ThemeSource"
  },
  {
    "name": "org.springframework.util.AntPathMatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "combine",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractPathWithinPattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "extractUriTemplateVariables",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPatternComparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchStart",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.util.AntPathMatcher$AntPathStringMatcher"
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.ErrorHandler"
  },
  {
    "name": "org.springframework.util.MimeType"
  },
  {
    "name": "org.springframework.util.MultiValueMap"
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.util.PropertiesPersister"
  },
  {
    "name": "org.springframework.util.StringValueResolver"
  },
  {
    "name": "org.springframework.util.concurrent.ListenableFuture"
  },
  {
    "name": "org.springframework.util.concurrent.ListenableFutureTask"
  },
  {
    "name": "org.springframework.util.unit.DataSize"
  },
  {
    "name": "org.springframework.validation.BindingResult"
  },
  {
    "name": "org.springframework.validation.DefaultMessageCodesResolver$Format"
  },
  {
    "name": "org.springframework.validation.Errors"
  },
  {
    "name": "org.springframework.validation.MessageCodesResolver"
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "validateObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getClockProvider",
        "parameterTypes": []
      },
      {
        "name": "getConstraintValidatorFactory",
        "parameterTypes": []
      },
      {
        "name": "getMessageInterpolator",
        "parameterTypes": []
      },
      {
        "name": "getParameterNameProvider",
        "parameterTypes": []
      },
      {
        "name": "getTraversableResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "usingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.HttpMediaTypeNotAcceptableException"
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getAllFileExtensions",
        "parameterTypes": []
      },
      {
        "name": "resolveFileExtensions",
        "parameterTypes": [
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "resolveMediaTypes",
        "parameterTypes": [
          "org.springframework.web.context.request.NativeWebRequest"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.CrossOrigin"
  },
  {
    "name": "org.springframework.web.bind.annotation.DeleteMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ModelAttribute",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PatchMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod"
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseStatus",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
  },
  {
    "name": "org.springframework.web.bind.support.SessionAttributeStore"
  },
  {
    "name": "org.springframework.web.bind.support.WebBindingInitializer"
  },
  {
    "name": "org.springframework.web.bind.support.WebDataBinderFactory"
  },
  {
    "name": "org.springframework.web.client.DefaultRestClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "head",
        "parameterTypes": []
      },
      {
        "name": "method",
        "parameterTypes": [
          "org.springframework.http.HttpMethod"
        ]
      },
      {
        "name": "mutate",
        "parameterTypes": []
      },
      {
        "name": "options",
        "parameterTypes": []
      },
      {
        "name": "patch",
        "parameterTypes": []
      },
      {
        "name": "post",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.client.RestClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.client.RestClient$Builder"
  },
  {
    "name": "org.springframework.web.client.RestClient$RequestBodyUriSpec"
  },
  {
    "name": "org.springframework.web.client.RestClient$RequestHeadersSpec"
  },
  {
    "name": "org.springframework.web.client.RestClient$RequestHeadersUriSpec"
  },
  {
    "name": "org.springframework.web.client.RestTemplate"
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.annotation.SessionScope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.request.AsyncWebRequestInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.context.request.NativeWebRequest"
  },
  {
    "name": "org.springframework.web.context.request.RequestAttributes"
  },
  {
    "name": "org.springframework.web.context.request.RequestContextListener"
  },
  {
    "name": "org.springframework.web.context.request.ServletRequestAttributes"
  },
  {
    "name": "org.springframework.web.context.request.WebRequest"
  },
  {
    "name": "org.springframework.web.context.request.WebRequestInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.context.request.async.WebAsyncManager"
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.cors.CorsConfiguration"
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.cors.CorsProcessor"
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceRequestEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceResponseEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequestEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponseEncoding",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.DelegatingFilterProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.FormContentFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setFormConverter",
        "parameterTypes": [
          "org.springframework.http.converter.FormHttpMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "jakarta.servlet.FilterConfig"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.HiddenHttpMethodFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMethodParam",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "jakarta.servlet.ServletRequest",
          "jakarta.servlet.ServletResponse",
          "jakarta.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.ControllerAdviceBean"
  },
  {
    "name": "org.springframework.web.method.HandlerMethod"
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.method.annotation.InitBinderDataBinderFactory"
  },
  {
    "name": "org.springframework.web.method.annotation.ModelFactory"
  },
  {
    "name": "org.springframework.web.method.annotation.SessionAttributesHandler"
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "contributeMethodArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "java.lang.Object",
          "org.springframework.web.util.UriComponentsBuilder",
          "java.util.Map",
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodReturnValueHandler"
  },
  {
    "name": "org.springframework.web.method.support.InvocableHandlerMethod"
  },
  {
    "name": "org.springframework.web.method.support.ModelAndViewContainer"
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartException"
  },
  {
    "name": "org.springframework.web.multipart.MultipartFile"
  },
  {
    "name": "org.springframework.web.multipart.MultipartHttpServletRequest"
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cleanupMultipart",
        "parameterTypes": [
          "org.springframework.web.multipart.MultipartHttpServletRequest"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "resolveMultipart",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "org.springframework.web.reactive.HandlerResult"
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer"
  },
  {
    "name": "org.springframework.web.reactive.function.client.ExchangeFilterFunction"
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient"
  },
  {
    "name": "org.springframework.web.reactive.result.view.RequestContext"
  },
  {
    "name": "org.springframework.web.reactive.result.view.View"
  },
  {
    "name": "org.springframework.web.server.ServerWebExchange"
  },
  {
    "name": "org.springframework.web.service.annotation.HttpExchange"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.FlashMap"
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getContextClass",
        "parameterTypes": []
      },
      {
        "name": "getContextConfigLocation",
        "parameterTypes": []
      },
      {
        "name": "getContextId",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getServletContextAttributeName",
        "parameterTypes": []
      },
      {
        "name": "isEnableLoggingRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setContextConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializerClasses",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializers",
        "parameterTypes": [
          "org.springframework.context.ApplicationContextInitializer[]"
        ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableLoggingRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExecutionChain"
  },
  {
    "name": "org.springframework.web.servlet.HandlerInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterCompletion",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "postHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "org.springframework.web.servlet.ModelAndView"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.HttpServletBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.LocaleContextResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.ModelAndView"
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "PATH_VARIABLES"
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.CorsRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.CorsRegistry"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addInterceptors",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "addReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addViewControllers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
        ]
      },
      {
        "name": "configureAsyncSupport",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
        ]
      },
      {
        "name": "configureContentNegotiation",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
        ]
      },
      {
        "name": "configureDefaultServletHandling",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
        ]
      },
      {
        "name": "configureHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configureMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "configurePathMatch",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
        ]
      },
      {
        "name": "extendHandlerExceptionResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "extendMessageConverters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.HandlerFunction"
  },
  {
    "name": "org.springframework.web.servlet.function.RouterFunction"
  },
  {
    "name": "org.springframework.web.servlet.function.ServerRequest"
  },
  {
    "name": "org.springframework.web.servlet.function.ServerResponse"
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setDetectHandlersInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCorsConfigurationSource",
        "parameterTypes": []
      },
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getDefaultHandler",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPatternParser",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysUseFullPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.CorsProcessor"
        ]
      },
      {
        "name": "setDefaultHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRemoveSemicolonContent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlDecode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      },
      {
        "name": "usesPathPatterns",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getHandlerMethodsForMappingName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMappingPathPatterns",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setDetectHandlerMethodsInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHandlerMethodMappingNamingStrategy",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$Match"
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getRootHandler",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRootHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveException",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object",
          "java.lang.Exception"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCorsConfiguration",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector$AttributesPreservingRequest"
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector$CachedResult"
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
  },
  {
    "name": "org.springframework.web.servlet.handler.MappedInterceptor"
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.handler.RequestMatchResult"
  },
  {
    "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.AbstractLocaleContextResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDefaultTimeZone",
        "parameterTypes": []
      },
      {
        "name": "setDefaultTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setDefaultLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.CookieLocaleResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveLocale",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "resolveLocaleContext",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setLocaleContext",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "org.springframework.context.i18n.LocaleContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.i18n.LocaleChangeInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "preHandle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"
  },
  {
    "name": "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"
  },
  {
    "name": "org.springframework.web.servlet.mvc.condition.RequestCondition"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfo"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getFlashMapTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "retrieveAndUpdate",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "saveOutputFlashMap",
        "parameterTypes": [
          "org.springframework.web.servlet.FlashMap",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setFlashMapTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.RequestContext"
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.WebContentGenerator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDefaultThemeName",
        "parameterTypes": []
      },
      {
        "name": "setDefaultThemeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "setThemeName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheFilter",
        "parameterTypes": []
      },
      {
        "name": "getCacheLimit",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "isCacheUnresolved",
        "parameterTypes": []
      },
      {
        "name": "removeFromCache",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheFilter",
        "parameterTypes": [
          "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
        ]
      },
      {
        "name": "setCacheLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCacheUnresolved",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractUrlBasedView",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "checkResource",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractView",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addStaticAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAttributesMap",
        "parameterTypes": []
      },
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getRequestContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getStaticAttributes",
        "parameterTypes": []
      },
      {
        "name": "isExposePathVariables",
        "parameterTypes": []
      },
      {
        "name": "render",
        "parameterTypes": [
          "java.util.Map",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setAttributesCSV",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttributesMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExposeContextBeansAsAttributes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExposePathVariables",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExposedContextBeanNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setRequestContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver"
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getViewName",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceView",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.UrlBasedViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAttributesMap",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getRedirectHosts",
        "parameterTypes": []
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setAttributesMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExposeContextBeansAsAttributes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExposePathVariables",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExposedContextBeanNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRedirectContextRelative",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRedirectHosts",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setRedirectHttp10Compatible",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setViewClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.ViewResolverComposite",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "jakarta.servlet.ServletContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
  },
  {
    "name": "org.springframework.web.util.UriComponentsBuilder"
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.util.pattern.PathPattern"
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.util.pattern.PatternParseException"
  },
  {
    "name": "org.springframework.ws.transport.http.MessageDispatcherServlet"
  },
  {
    "name": "org.thymeleaf.IEngineConfiguration"
  },
  {
    "name": "org.thymeleaf.ITemplateEngine",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.IThrottledTemplateProcessor"
  },
  {
    "name": "org.thymeleaf.TemplateEngine",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addDialect",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "addMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "addTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "clearDialects",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCache",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "setAdditionalDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.thymeleaf.cache.ICacheManager"
        ]
      },
      {
        "name": "setDecoupledTemplateLogicResolver",
        "parameterTypes": [
          "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "setDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDialectsByPrefix",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEngineContextFactory",
        "parameterTypes": [
          "org.thymeleaf.context.IEngineContextFactory"
        ]
      },
      {
        "name": "setLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "setLinkBuilders",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "setMessageResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "setTemplateResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.TemplateSpec"
  },
  {
    "name": "org.thymeleaf.cache.ICacheEntryValidity"
  },
  {
    "name": "org.thymeleaf.cache.ICacheManager"
  },
  {
    "name": "org.thymeleaf.context.IContext"
  },
  {
    "name": "org.thymeleaf.context.IEngineContextFactory"
  },
  {
    "name": "org.thymeleaf.dialect.AbstractDialect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.dialect.IDialect",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.dialect.IExecutionAttributeDialect",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.dialect.IExpressionObjectDialect",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.dialect.IProcessorDialect",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.expression.IExpressionObjectFactory"
  },
  {
    "name": "org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getDialectProcessorPrecedence",
        "parameterTypes": []
      },
      {
        "name": "getExecutionAttributes",
        "parameterTypes": []
      },
      {
        "name": "getExpressionObjectFactory",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getProcessors",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.extras.springsecurity6.util.Spring6VersionSpecificUtility",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.linkbuilder.ILinkBuilder"
  },
  {
    "name": "org.thymeleaf.messageresolver.IMessageResolver"
  },
  {
    "name": "org.thymeleaf.spring5.context.IThymeleafRequestContext"
  },
  {
    "name": "org.thymeleaf.spring5.expression.IThymeleafEvaluationContext"
  },
  {
    "name": "org.thymeleaf.spring6.ISpringTemplateEngine",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.spring6.SpringTemplateEngine",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setTemplateEngineMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.context.IThymeleafRequestContext"
  },
  {
    "name": "org.thymeleaf.spring6.expression.IThymeleafEvaluationContext"
  },
  {
    "name": "org.thymeleaf.spring6.expression.Mvc$Spring41MvcUriComponentsBuilderDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.view.AbstractThymeleafView",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "addStaticVariable",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getForceContentType",
        "parameterTypes": []
      },
      {
        "name": "getProducePartialOutputWhileProcessing",
        "parameterTypes": []
      },
      {
        "name": "getStaticVariables",
        "parameterTypes": []
      },
      {
        "name": "getTemplateName",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceContentType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProducePartialOutputWhileProcessing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTemplateName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.view.ThymeleafView",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "render",
        "parameterTypes": [
          "java.util.Map",
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring6.view.ThymeleafViewResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.AdditionExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression",
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.AdditionSubtractionExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.AndExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.EqualsNotEqualsExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.GreaterLesserExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardConversionService"
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardExpressionParser"
  },
  {
    "name": "org.thymeleaf.standard.expression.IStandardVariableExpressionEvaluator"
  },
  {
    "name": "org.thymeleaf.standard.expression.MultiplicationDivisionRemainderExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.OrExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.templatemode.TemplateMode"
  },
  {
    "name": "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "resolveTemplate",
        "parameterTypes": [
          "org.thymeleaf.IEngineConfiguration",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setCheckExistence",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResolvablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseDecoupledLogic",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.templateresolver.ITemplateResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.thymeleaf.templateresolver.TemplateResolution"
  },
  {
    "name": "org.thymeleaf.templateresource.ITemplateResource"
  },
  {
    "name": "org.thymeleaf.util.PatternSpec"
  },
  {
    "name": "org.webjars.WebJarAssetLocator"
  },
  {
    "name": "org.xmlbeam.XBProjector"
  },
  {
    "name": "org.xnio.SslClientAuthMode"
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.Hooks"
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "reactor.netty.http.server.HttpServer"
  },
  {
    "name": "reactor.tools.agent.ReactorDebugAgent"
  },
  {
    "name": "reactor.util.lang.NonNullApi"
  },
  {
    "name": "scala.Option"
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ]
  },
  {
    "name": "sun.reflect.ReflectionFactory",
    "methods": [
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DRBG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "void",
    "queryAllDeclaredMethods": true
  }
]
